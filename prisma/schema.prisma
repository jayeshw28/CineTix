// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name  String
  image String?

  Admin   Admin?
  Manager Manager?

  Booking Booking[]
  Ticket  Ticket[]
}

model Admin {
  id   String @id
  User User   @relation(fields: [id], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Manager {
  id        String   @id
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  User   User     @relation(fields: [id], references: [id])
  Cinema Cinema[]
}

model Cinema {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  name      String
  Screen    Screen[]
  Address   Address?
  Manager   Manager[]
  managerId String
}

model Address {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cinemaId  Int      @unique
  Cinema    Cinema   @relation(fields: [cinemaId], references: [id])
  address   String
  city      City     @default(Delhi)
  state     States   @default(Delhi)
  lat       Float    @default(28.7041)
  lng       Float    @default(77.1025)
}

model Screen {
  id              Int             @id @default(autoincrement())
  createdAt       DateTime        @default(now())
  updatedAt       DateTime        @updatedAt
  number          Int
  cinemaId        Int
  Cinema          Cinema          @relation(fields: [cinemaId], references: [id])
  Seats           Seat[]
  ShowTime        ShowTime[]
  projectionType  ProjectionType  @default(STANDARD)
  soundSystemType SoundSystemType @default(DOLBY_ATMOS)

  price Float @default(180)

  @@unique([cinemaId, number])
}

model Seat {
  row      Int
  column   Int
  screenId Int
  Screen   Screen    @relation(fields: [screenId], references: [id])
  Bookings Booking[]

  @@id([screenId, row, column])
}

model Movie {
  id          Int        @id @default(autoincrement())
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  title       String
  director    String
  cast        String[]
  genre       Genre
  duration    Int //in minutes
  releaseDate DateTime
  posterUrl   String?
  ShowTime    ShowTime[]
}

model ShowTime {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  startTime DateTime
  movieId   Int
  Movie     Movie     @relation(fields: [movieId], references: [id])
  screenId  Int
  Screen    Screen    @relation(fields: [screenId], references: [id])
  Bookings  Booking[]

  status ShowtimeStatus?

  @@unique([startTime, screenId])
}

model Booking {
  id         Int      @id @default(autoincrement())
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  userId     String
  User       User     @relation(fields: [userId], references: [id])
  showtimeId Int
  ShowTime   ShowTime @relation(fields: [showtimeId], references: [id])
  row        Int
  column     Int
  screenId   Int
  Seat       Seat     @relation(fields: [screenId, row, column], references: [screenId, row, column])
  Ticket     Ticket   @relation(fields: [ticketId], references: [id])
  ticketId   Int

  @@unique([screenId, row, column, showtimeId], name: "uniqueSeatShowtime")
  @@index([screenId, row, column], name: "seatIndex")
}

model Ticket {
  id   Int    @id @default(autoincrement())
  uid  String
  User User   @relation(fields: [uid], references: [id])

  qrCode String?

  Booking Booking[]
}

enum States {
  Andhra_Pradesh
  Arunachal_Pradesh
  Assam
  Bihar
  Chandigarh
  Chhattisgarh
  Dadra_and_Nagar_Haveli_and_Daman_and_Diu
  Delhi
  Goa
  Gujarat
  Haryana
  Himachal_Pradesh
  Jammu_and_Kashmir
  Jharkhand
  Karnataka
  Kerala
  Ladakh
  Lakshadweep
  Madhya_Pradesh
  Maharashtra
  Manipur
  Meghalaya
  Mizoram
  Nagaland
  Odisha
  Puducherry
  Punjab
  Rajasthan
  Sikkim
  Tamil_Nadu
  Telangana
  Tripura
  Uttar_Pradesh
  Uttarakhand
  West_Bengal
}

enum City {
  Agra
  Ahmedabad
  Allahabad
  Amritsar
  Bangalore
  Bhopal
  Bhubaneswar
  Chandigarh
  Chennai
  Coimbatore
  Delhi
  Faridabad
  Ghaziabad
  Goa
  Gurgaon
  Guwahati
  Hyderabad
  Indore
  Jaipur
  Kanpur
  Kochi
  Kolkata
  Lucknow
  Ludhiana
  Madurai
  Mangalore
  Mumbai
  Nagpur
  Noida
  Patna
  Pune
  Ranchi
  Surat
  Thiruvananthapuram
  Vadodara
  Varanasi
  Visakhapatnam
}

enum ProjectionType {
  STANDARD
  IMAX
  DOLBY_ATMOS
  REALD_3D
  IMAX_70MM
}

enum SoundSystemType {
  STEREO
  DOLBY_ATMOS
  DOLBY_DIGITAL
  DTS
  DTS_x
  SDDS
  IMAX_ENHANCED
}

enum Genre {
  ACTION
  ADVENTURE
  ANIMATION
  BIOGRAPHY
  COMEDY
  CRIME
  DOCUMENTARY
  DRAMA
  FAMILY
  FANTASY
  FILM_NOIR
  HISTORY
  HORROR
  MUSIC
  MUSICAL
  MYSTERY
  ROMANCE
  SCI_FI
  SHORT
  SPORT
  SUPERHERO
  THRILLER
  WAR
  WESTERN
}

enum ShowtimeStatus {
  POSTPONED
  CANCELLED
  ONGOING
  ENDED
}
